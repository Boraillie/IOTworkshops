<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM32L053R8_NUCLEO\SensorDemoProject.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM32L053R8_NUCLEO\SensorDemoProject.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Wed Oct 24 13:59:36 2018
<BR><P>
<H3>Maximum Stack Usage =        904 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6f]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6f]">ADC1_COMP_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6c]">DMA1_Channel1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6d]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6e]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[68]">EXTI0_1_IRQHandler</a> from stm32xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[69]">EXTI2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6a]">EXTI4_15_IRQHandler</a> from stm32xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[66]">FLASH_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5]">HTS221_H_Check_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_H_Check_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[1]">HTS221_H_DeInit</a> from hts221_driver_hl.o(i.HTS221_H_DeInit) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[c]">HTS221_H_Get_DRDY_Status</a> from hts221_driver_hl.o(i.HTS221_H_Get_DRDY_Status) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[6]">HTS221_H_Get_Hum</a> from hts221_driver_hl.o(i.HTS221_H_Get_Hum) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[7]">HTS221_H_Get_ODR</a> from hts221_driver_hl.o(i.HTS221_H_Get_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[4]">HTS221_H_Get_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_H_Get_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[0]">HTS221_H_Init</a> from hts221_driver_hl.o(i.HTS221_H_Init) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[a]">HTS221_H_Read_Reg</a> from hts221_driver_hl.o(i.HTS221_H_Read_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[3]">HTS221_H_Sensor_Disable</a> from hts221_driver_hl.o(i.HTS221_H_Sensor_Disable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[2]">HTS221_H_Sensor_Enable</a> from hts221_driver_hl.o(i.HTS221_H_Sensor_Enable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[8]">HTS221_H_Set_ODR</a> from hts221_driver_hl.o(i.HTS221_H_Set_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[9]">HTS221_H_Set_ODR_Value</a> from hts221_driver_hl.o(i.HTS221_H_Set_ODR_Value) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[b]">HTS221_H_Write_Reg</a> from hts221_driver_hl.o(i.HTS221_H_Write_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[12]">HTS221_T_Check_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_T_Check_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[e]">HTS221_T_DeInit</a> from hts221_driver_hl.o(i.HTS221_T_DeInit) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[19]">HTS221_T_Get_DRDY_Status</a> from hts221_driver_hl.o(i.HTS221_T_Get_DRDY_Status) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[14]">HTS221_T_Get_ODR</a> from hts221_driver_hl.o(i.HTS221_T_Get_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[13]">HTS221_T_Get_Temp</a> from hts221_driver_hl.o(i.HTS221_T_Get_Temp) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[11]">HTS221_T_Get_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_T_Get_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[d]">HTS221_T_Init</a> from hts221_driver_hl.o(i.HTS221_T_Init) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[17]">HTS221_T_Read_Reg</a> from hts221_driver_hl.o(i.HTS221_T_Read_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[10]">HTS221_T_Sensor_Disable</a> from hts221_driver_hl.o(i.HTS221_T_Sensor_Disable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[f]">HTS221_T_Sensor_Enable</a> from hts221_driver_hl.o(i.HTS221_T_Sensor_Enable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[15]">HTS221_T_Set_ODR</a> from hts221_driver_hl.o(i.HTS221_T_Set_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[16]">HTS221_T_Set_ODR_Value</a> from hts221_driver_hl.o(i.HTS221_T_Set_ODR_Value) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[18]">HTS221_T_Write_Reg</a> from hts221_driver_hl.o(i.HTS221_T_Write_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[5f]">HardFault_Handler</a> from stm32xx_it.o(i.HardFault_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[75]">I2C1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[76]">I2C2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7c]">LCD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[55]">LPS22HB_FIFO_Get_Data</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Data) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4e]">LPS22HB_FIFO_Get_Empty_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Empty_Status) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[51]">LPS22HB_FIFO_Get_Fth_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Fth_Status) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4f]">LPS22HB_FIFO_Get_Full_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Full_Status) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[56]">LPS22HB_FIFO_Get_Mode</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Mode) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[54]">LPS22HB_FIFO_Get_Num_Of_Samples</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Num_Of_Samples) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[50]">LPS22HB_FIFO_Get_Ovr_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Ovr_Status) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[58]">LPS22HB_FIFO_Get_Watermark_Level</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Watermark_Level) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[5c]">LPS22HB_FIFO_Reset_Interrupt</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Reset_Interrupt) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[5b]">LPS22HB_FIFO_Set_Interrupt</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Interrupt) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[57]">LPS22HB_FIFO_Set_Mode</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Mode) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[59]">LPS22HB_FIFO_Set_Watermark_Level</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Watermark_Level) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[52]">LPS22HB_FIFO_Stop_On_Fth</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Stop_On_Fth) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[53]">LPS22HB_FIFO_Usage</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Usage) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[5a]">LPS22HB_FIFO_Watermark_Usage</a> from lps22hb_driver_hl.o(i.LPS22HB_FIFO_Watermark_Usage) referenced 4 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[39]">LPS22HB_P_Check_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Check_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[35]">LPS22HB_P_DeInit</a> from lps22hb_driver_hl.o(i.LPS22HB_P_DeInit) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[40]">LPS22HB_P_Get_DRDY_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_DRDY_Status) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3b]">LPS22HB_P_Get_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3a]">LPS22HB_P_Get_Press</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_Press) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[38]">LPS22HB_P_Get_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[34]">LPS22HB_P_Init</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Init) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3e]">LPS22HB_P_Read_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Read_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[37]">LPS22HB_P_Sensor_Disable</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Disable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[36]">LPS22HB_P_Sensor_Enable</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Enable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3c]">LPS22HB_P_Set_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3d]">LPS22HB_P_Set_ODR_Value</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR_Value) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[3f]">LPS22HB_P_Write_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Write_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[46]">LPS22HB_T_Check_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Check_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[42]">LPS22HB_T_DeInit</a> from lps22hb_driver_hl.o(i.LPS22HB_T_DeInit) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4d]">LPS22HB_T_Get_DRDY_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_DRDY_Status) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[48]">LPS22HB_T_Get_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[47]">LPS22HB_T_Get_Temp</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_Temp) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[45]">LPS22HB_T_Get_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[41]">LPS22HB_T_Init</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Init) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4b]">LPS22HB_T_Read_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Read_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[44]">LPS22HB_T_Sensor_Disable</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Disable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[43]">LPS22HB_T_Sensor_Enable</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Enable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[49]">LPS22HB_T_Set_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4a]">LPS22HB_T_Set_ODR_Value</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR_Value) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[4c]">LPS22HB_T_Write_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Write_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1f]">LPS25HB_P_Check_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Check_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[1b]">LPS25HB_P_DeInit</a> from lps25hb_driver_hl.o(i.LPS25HB_P_DeInit) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[26]">LPS25HB_P_Get_DRDY_Status</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_DRDY_Status) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[21]">LPS25HB_P_Get_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[20]">LPS25HB_P_Get_Press</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_Press) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[1e]">LPS25HB_P_Get_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[1a]">LPS25HB_P_Init</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Init) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[24]">LPS25HB_P_Read_Reg</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Read_Reg) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[1d]">LPS25HB_P_Sensor_Disable</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Disable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[1c]">LPS25HB_P_Sensor_Enable</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Enable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[22]">LPS25HB_P_Set_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[23]">LPS25HB_P_Set_ODR_Value</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR_Value) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[25]">LPS25HB_P_Write_Reg</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Write_Reg) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2c]">LPS25HB_T_Check_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Check_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[28]">LPS25HB_T_DeInit</a> from lps25hb_driver_hl.o(i.LPS25HB_T_DeInit) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[33]">LPS25HB_T_Get_DRDY_Status</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_DRDY_Status) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2e]">LPS25HB_T_Get_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2d]">LPS25HB_T_Get_Temp</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_Temp) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2b]">LPS25HB_T_Get_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[27]">LPS25HB_T_Init</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Init) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[31]">LPS25HB_T_Read_Reg</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Read_Reg) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2a]">LPS25HB_T_Sensor_Disable</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Disable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[29]">LPS25HB_T_Sensor_Enable</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Enable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[2f]">LPS25HB_T_Set_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[30]">LPS25HB_T_Set_ODR_Value</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR_Value) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[32]">LPS25HB_T_Write_Reg</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Write_Reg) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[70]">LPTIM1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5e]">NMI_Handler</a> from stm32xx_it.o(i.NMI_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[64]">PVD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[61]">PendSV_Handler</a> from stm32xx_it.o(i.PendSV_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[67]">RCC_CRS_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7b]">RNG_LPUART1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[65]">RTC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5d]">Reset_Handler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[77]">SPI1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[78]">SPI2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[60]">SVC_Handler</a> from stm32xx_it.o(i.SVC_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[62]">SysTick_Handler</a> from stm32xx_it.o(i.SysTick_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7f]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l053xx.o(.text)
 <LI><a href="#[73]">TIM21_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[74]">TIM22_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[71]">TIM2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[72]">TIM6_DAC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[6b]">TSC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[79]">USART1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7a]">USART2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7d]">USB_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[63]">WWDG_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[80]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l053xx.o(.text)
 <LI><a href="#[81]">fputc</a> from fputc.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[7e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[80]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(.text)
</UL>
<P><STRONG><a name="[17f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[82]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[180]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[181]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[182]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[183]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[184]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>RNG_LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[185]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temperature
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temperature
</UL>

<P><STRONG><a name="[187]"></a>___aeabi_memcpy$ret</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>___aeabi_memcpy4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>___aeabi_memcpy8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[18c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
</UL>

<P><STRONG><a name="[17e]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
</UL>

<P><STRONG><a name="[18e]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[f3]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temp
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Hum
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temp
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Press
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Press
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temp
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temp
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Press
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Press
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Hum
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
</UL>

<P><STRONG><a name="[190]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR_Value
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Disabled
</UL>

<P><STRONG><a name="[f4]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[191]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[192]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[193]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[8a]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[93]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[92]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[83]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[195]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>Add_Environmental_Sensor_Service</STRONG> (Thumb, 312 bytes, Stack size 80 bytes, sensor_service.o(i.Add_Environmental_Sensor_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = Add_Environmental_Sensor_Service &rArr; aci_gatt_add_char_desc &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>Add_LED_Service</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, sensor_service.o(i.Add_LED_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = Add_LED_Service &rArr; aci_gatt_add_char &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>Attribute_Modified_CB</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sensor_service.o(i.Attribute_Modified_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Attribute_Modified_CB &rArr; BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[a4]"></a>BNRG_SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.BNRG_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BNRG_SPI_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>BSP_LED_Init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, stm32l0xx_nucleo.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>BSP_LED_Off</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l0xx_nucleo.o(i.BSP_LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[a2]"></a>BSP_LED_On</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l0xx_nucleo.o(i.BSP_LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[160]"></a>BSP_TEMPERATURE_Get_Temp</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_TEMPERATURE_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_TEMPERATURE_Get_Temp
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
</UL>

<P><STRONG><a name="[ae]"></a>BSP_TEMPERATURE_Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP_TEMPERATURE_Init &rArr; BSP_LPS25HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_TEMPERATURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeAllSensors
</UL>

<P><STRONG><a name="[15f]"></a>BSP_TEMPERATURE_IsInitialized</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_TEMPERATURE_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
</UL>

<P><STRONG><a name="[170]"></a>BSP_TEMPERATURE_Sensor_Enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_TEMPERATURE_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_TEMPERATURE_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableAllSensors
</UL>

<P><STRONG><a name="[b0]"></a>BlueNRG_DataPresent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.BlueNRG_DataPresent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BlueNRG_DataPresent
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[b2]"></a>BlueNRG_RST</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.BlueNRG_RST))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BlueNRG_RST &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>BlueNRG_SPI_Read_All</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, stm32_bluenrg_ble.o(i.BlueNRG_SPI_Read_All))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[b6]"></a>BlueNRG_SPI_Write</STRONG> (Thumb, 180 bytes, Stack size 320 bytes, stm32_bluenrg_ble.o(i.BlueNRG_SPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_output
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_input
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us150Delay
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
</UL>

<P><STRONG><a name="[e2]"></a>Clear_SPI_EXTI_Flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32_bluenrg_ble.o(i.Clear_SPI_EXTI_Flag))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[bc]"></a>Clock_Time</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, clock.o(i.Clock_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Clock_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
</UL>

<P><STRONG><a name="[b7]"></a>Disable_SPI_IRQ</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.Disable_SPI_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Disable_SPI_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[68]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32xx_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EXTI0_1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32xx_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EXTI4_15_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>Enable_SPI_IRQ</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.Enable_SPI_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Enable_SPI_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[dd]"></a>GAP_ConnectionComplete_CB</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensor_service.o(i.GAP_ConnectionComplete_CB))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[dc]"></a>GAP_DisconnectionComplete_CB</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sensor_service.o(i.GAP_DisconnectionComplete_CB))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[b3]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
</UL>

<P><STRONG><a name="[c1]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bluenrg_interface.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>HAL_GPIO_Init</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_output
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_input
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Sensor_IO_ITConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[b1]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
</UL>

<P><STRONG><a name="[aa]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_output
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
</UL>

<P><STRONG><a name="[bd]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[c3]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>

<P><STRONG><a name="[10e]"></a>HAL_I2C_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[c5]"></a>HAL_I2C_Init</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[c7]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>

<P><STRONG><a name="[cc]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 386 bytes, Stack size 48 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
</UL>

<P><STRONG><a name="[c4]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[c6]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[15c]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cf]"></a>HAL_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>HAL_InitTick</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[d1]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
</UL>

<P><STRONG><a name="[c0]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Sensor_IO_ITConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[d4]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Sensor_IO_ITConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>

<P><STRONG><a name="[d6]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 458 bytes, Stack size 16 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[d2]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[d7]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[d8]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1650 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a5]"></a>HAL_SPI_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 414 bytes, Stack size 32 bytes, stm32l0xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[b5]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 894 bytes, Stack size 24 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
</UL>

<P><STRONG><a name="[d3]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[db]"></a>HCI_Event_CB</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, sensor_service.o(i.HCI_Event_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = HCI_Event_CB &rArr; Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DisconnectionComplete_CB
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ConnectionComplete_CB
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
</UL>

<P><STRONG><a name="[df]"></a>HCI_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hci.o(i.HCI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HCI_Init &rArr; list_insert_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>HCI_Isr</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, hci.o(i.HCI_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SPI_EXTI_Flag
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[e7]"></a>HCI_Process</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hci.o(i.HCI_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = HCI_Process &rArr; HCI_Event_CB &rArr; Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>HCI_Queue_Empty</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hci.o(i.HCI_Queue_Empty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HCI_Queue_Empty &rArr; list_is_empty
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[e5]"></a>HCI_verify</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hci.o(i.HCI_verify))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[e9]"></a>HTS221_Activate</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Activate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Enable
</UL>

<P><STRONG><a name="[ee]"></a>HTS221_DeActivate</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_DeActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Disable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>

<P><STRONG><a name="[ef]"></a>HTS221_Get_DataStatus</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hts221_driver.o(i.HTS221_Get_DataStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HTS221_Get_DataStatus &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_DRDY_Status
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_DRDY_Status
</UL>

<P><STRONG><a name="[f0]"></a>HTS221_Get_DeviceID</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_Get_DeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_WhoAmI
</UL>

<P><STRONG><a name="[f2]"></a>HTS221_Get_Humidity</STRONG> (Thumb, 254 bytes, Stack size 72 bytes, hts221_driver.o(i.HTS221_Get_Humidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HTS221_Get_Humidity &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Hum
</UL>

<P><STRONG><a name="[f8]"></a>HTS221_Get_Odr</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_Get_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Get_Odr &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_ODR
</UL>

<P><STRONG><a name="[fa]"></a>HTS221_Get_Temperature</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, hts221_driver.o(i.HTS221_Get_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HTS221_Get_Temperature &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temp
</UL>

<P><STRONG><a name="[ea]"></a>HTS221_ReadReg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, hts221_driver.o(i.HTS221_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Odr
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Read_Reg
</UL>

<P><STRONG><a name="[103]"></a>HTS221_Set_BduMode</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_Set_BduMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Set_BduMode &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>

<P><STRONG><a name="[106]"></a>HTS221_Set_Odr</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, hts221_driver.o(i.HTS221_Set_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR_Value
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>

<P><STRONG><a name="[eb]"></a>HTS221_WriteReg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, hts221_driver.o(i.HTS221_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Write_Reg
</UL>

<P><STRONG><a name="[105]"></a>HTS221_assert_failed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HTS221_assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
</UL>

<P><STRONG><a name="[109]"></a>Hal_Write_Serial</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, stm32_bluenrg_ble.o(i.Hal_Write_Serial))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_write
</UL>

<P><STRONG><a name="[5f]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>LPS22HB_Get_DataStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_DataStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_DataStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_DRDY_Status
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_DRDY_Status
</UL>

<P><STRONG><a name="[123]"></a>LPS22HB_Get_DeviceID</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_DeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_WhoAmI
</UL>

<P><STRONG><a name="[118]"></a>LPS22HB_Get_FifoMode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_FifoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_FifoMode &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Mode
</UL>

<P><STRONG><a name="[117]"></a>LPS22HB_Get_FifoStatus</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_FifoStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Ovr_Status
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Num_Of_Samples
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Full_Status
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Fth_Status
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Empty_Status
</UL>

<P><STRONG><a name="[119]"></a>LPS22HB_Get_FifoWatermarkLevel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_FifoWatermarkLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_FifoWatermarkLevel &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Watermark_Level
</UL>

<P><STRONG><a name="[125]"></a>LPS22HB_Get_Odr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>

<P><STRONG><a name="[126]"></a>LPS22HB_Get_Pressure</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_Pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_Get_Pressure &rArr; LPS22HB_Get_RawPressure &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_RawPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Press
</UL>

<P><STRONG><a name="[127]"></a>LPS22HB_Get_RawPressure</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lps22hb_driver.o(i.LPS22HB_Get_RawPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS22HB_Get_RawPressure &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Pressure
</UL>

<P><STRONG><a name="[128]"></a>LPS22HB_Get_RawTemperature</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lps22hb_driver.o(i.LPS22HB_Get_RawTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS22HB_Get_RawTemperature &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temperature
</UL>

<P><STRONG><a name="[129]"></a>LPS22HB_Get_Temperature</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Get_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_Get_Temperature &rArr; LPS22HB_Get_RawTemperature &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_RawTemperature
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temp
</UL>

<P><STRONG><a name="[122]"></a>LPS22HB_ReadReg</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, lps22hb_driver.o(i.LPS22HB_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Read_Reg
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevelUse
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoModeUse
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_OVR_Interrupt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FULL_Interrupt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FTH_Interrupt
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_RawTemperature
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_RawPressure
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Odr
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoWatermarkLevel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoMode
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>

<P><STRONG><a name="[ac]"></a>LPS22HB_Sensor_IO_ITConfig</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, x_nucleo_iks01a1.o(i.LPS22HB_Sensor_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_Sensor_IO_ITConfig &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[130]"></a>LPS22HB_Set_AutomaticIncrementRegAddress</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_AutomaticIncrementRegAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_AutomaticIncrementRegAddress &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12f]"></a>LPS22HB_Set_Bdu</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_Bdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_Bdu &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[11a]"></a>LPS22HB_Set_FIFO_FTH_Interrupt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FIFO_FTH_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FIFO_FTH_Interrupt &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Set_Interrupt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Reset_Interrupt
</UL>

<P><STRONG><a name="[11b]"></a>LPS22HB_Set_FIFO_FULL_Interrupt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FIFO_FULL_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FIFO_FULL_Interrupt &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Set_Interrupt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Reset_Interrupt
</UL>

<P><STRONG><a name="[11c]"></a>LPS22HB_Set_FIFO_OVR_Interrupt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FIFO_OVR_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FIFO_OVR_Interrupt &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Set_Interrupt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Reset_Interrupt
</UL>

<P><STRONG><a name="[11d]"></a>LPS22HB_Set_FifoMode</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FifoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FifoMode &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Set_Mode
</UL>

<P><STRONG><a name="[120]"></a>LPS22HB_Set_FifoModeUse</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FifoModeUse))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FifoModeUse &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Usage
</UL>

<P><STRONG><a name="[11e]"></a>LPS22HB_Set_FifoWatermarkLevel</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FifoWatermarkLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FifoWatermarkLevel &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Set_Watermark_Level
</UL>

<P><STRONG><a name="[11f]"></a>LPS22HB_Set_FifoWatermarkLevelUse</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_FifoWatermarkLevelUse))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_FifoWatermarkLevelUse &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Watermark_Usage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Stop_On_Fth
</UL>

<P><STRONG><a name="[12d]"></a>LPS22HB_Set_LowPassFilter</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_LowPassFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_LowPassFilter &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12e]"></a>LPS22HB_Set_LowPassFilterCutoff</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_LowPassFilterCutoff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_LowPassFilterCutoff &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12c]"></a>LPS22HB_Set_Odr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_Odr &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Sensor_Disable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Enabled
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Sensor_Disable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12b]"></a>LPS22HB_Set_PowerMode</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps22hb_driver.o(i.LPS22HB_Set_PowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Set_PowerMode &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[137]"></a>LPS22HB_WriteReg</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, lps22hb_driver.o(i.LPS22HB_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Write_Reg
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevelUse
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevel
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoModeUse
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_OVR_Interrupt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FULL_Interrupt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FTH_Interrupt
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
</UL>

<P><STRONG><a name="[138]"></a>LPS25HB_Activate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>

<P><STRONG><a name="[13c]"></a>LPS25HB_DeActivate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_DeActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[13d]"></a>LPS25HB_Get_DataStatus</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_DataStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Get_DataStatus &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_DRDY_Status
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_DRDY_Status
</UL>

<P><STRONG><a name="[13f]"></a>LPS25HB_Get_DeviceID</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_DeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>

<P><STRONG><a name="[141]"></a>LPS25HB_Get_Odr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>

<P><STRONG><a name="[143]"></a>LPS25HB_Get_Pressure</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_Get_Pressure &rArr; LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Press
</UL>

<P><STRONG><a name="[144]"></a>LPS25HB_Get_RawPressure</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_Get_RawPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Pressure
</UL>

<P><STRONG><a name="[145]"></a>LPS25HB_Get_RawTemperature</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_Get_RawTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temperature
</UL>

<P><STRONG><a name="[147]"></a>LPS25HB_Get_Temperature</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_Get_Temperature &rArr; LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawTemperature
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temp
</UL>

<P><STRONG><a name="[13e]"></a>LPS25HB_ReadReg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Read_Reg
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawTemperature
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawPressure
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Odr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DeviceID
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DataStatus
</UL>

<P><STRONG><a name="[14d]"></a>LPS25HB_Set_Avg</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_Set_Avg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_Set_Avg &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[14b]"></a>LPS25HB_Set_Bdu</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_Bdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Set_Bdu &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[14a]"></a>LPS25HB_Set_InterruptCircuitEnable</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_InterruptCircuitEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Set_InterruptCircuitEnable &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[155]"></a>LPS25HB_Set_Odr</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>

<P><STRONG><a name="[139]"></a>LPS25HB_Set_PowerDownMode</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_PowerDownMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Activate
</UL>

<P><STRONG><a name="[14c]"></a>LPS25HB_Set_SpiInterface</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_SpiInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Set_SpiInterface &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[154]"></a>LPS25HB_WriteReg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Write_Reg
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
</UL>

<P><STRONG><a name="[153]"></a>LPS25HB_assert_failed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lps25hb_driver.o(i.LPS25HB_assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPS25HB_assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
</UL>

<P><STRONG><a name="[5e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[156]"></a>Osal_MemCpy</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, osal.o(i.Osal_MemCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Osal_MemCpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
</UL>

<P><STRONG><a name="[158]"></a>Osal_MemSet</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, osal.o(i.Osal_MemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Osal_MemSet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
</UL>

<P><STRONG><a name="[61]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>Read_Request_CB</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sensor_service.o(i.Read_Request_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Sensor_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[60]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>Sensor_IO_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[104]"></a>Sensor_IO_Read</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>

<P><STRONG><a name="[107]"></a>Sensor_IO_Write</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.Sensor_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
</UL>

<P><STRONG><a name="[62]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[15d]"></a>SystemClock_Config</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, cube_hal_l0.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(.text)
</UL>
<P><STRONG><a name="[15a]"></a>Temp_Update</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sensor_service.o(i.Temp_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[10b]"></a>Timer_Expired</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gp_timer.o(i.Timer_Expired))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer_Expired &rArr; Clock_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[10a]"></a>Timer_Set</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gp_timer.o(i.Timer_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer_Set &rArr; Clock_Time
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[162]"></a>User_Process</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.User_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = User_Process &rArr; setConnectable &rArr; aci_gap_set_discoverable &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19a]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[108]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
</UL>

<P><STRONG><a name="[9a]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[af]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_iks01a1_temperature.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Enabled
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Disabled
</UL>

<P><STRONG><a name="[19b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[19c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[19d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[166]"></a>aci_gap_init_IDB04A1</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, bluenrg_gap_aci.o(i.aci_gap_init_IDB04A1))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = aci_gap_init_IDB04A1 &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[168]"></a>aci_gap_init_IDB05A1</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, bluenrg_gap_aci.o(i.aci_gap_init_IDB05A1))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = aci_gap_init_IDB05A1 &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[169]"></a>aci_gap_set_auth_requirement</STRONG> (Thumb, 128 bytes, Stack size 80 bytes, bluenrg_gap_aci.o(i.aci_gap_set_auth_requirement))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = aci_gap_set_auth_requirement &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16b]"></a>aci_gap_set_discoverable</STRONG> (Thumb, 252 bytes, Stack size 104 bytes, bluenrg_gap_aci.o(i.aci_gap_set_discoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = aci_gap_set_discoverable &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[9e]"></a>aci_gatt_add_char</STRONG> (Thumb, 208 bytes, Stack size 96 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = aci_gatt_add_char &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_LED_Service
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Environmental_Sensor_Service
</UL>

<P><STRONG><a name="[9f]"></a>aci_gatt_add_char_desc</STRONG> (Thumb, 266 bytes, Stack size 192 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_char_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = aci_gatt_add_char_desc &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Environmental_Sensor_Service
</UL>

<P><STRONG><a name="[9d]"></a>aci_gatt_add_serv</STRONG> (Thumb, 156 bytes, Stack size 88 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_serv))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = aci_gatt_add_serv &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_LED_Service
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Environmental_Sensor_Service
</UL>

<P><STRONG><a name="[15b]"></a>aci_gatt_allow_read</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, bluenrg_gatt_aci.o(i.aci_gatt_allow_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = aci_gatt_allow_read &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[16c]"></a>aci_gatt_init</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, bluenrg_gatt_aci.o(i.aci_gatt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = aci_gatt_init &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15e]"></a>aci_gatt_update_char_value</STRONG> (Thumb, 170 bytes, Stack size 192 bytes, bluenrg_gatt_aci.o(i.aci_gatt_update_char_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16d]"></a>aci_hal_set_tx_power_level</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, bluenrg_hal_aci.o(i.aci_hal_set_tx_power_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = aci_hal_set_tx_power_level &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>aci_hal_write_config_data</STRONG> (Thumb, 112 bytes, Stack size 176 bytes, bluenrg_hal_aci.o(i.aci_hal_write_config_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = aci_hal_write_config_data &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16f]"></a>enableAllSensors</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sensor_service.o(i.enableAllSensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enableAllSensors &rArr; BSP_TEMPERATURE_Sensor_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[173]"></a>getBlueNRGVersion</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, bluenrg_utils_small.o(i.getBlueNRGVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[174]"></a>hci_le_read_local_version</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, hci.o(i.hci_le_read_local_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = hci_le_read_local_version &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
</UL>

<P><STRONG><a name="[175]"></a>hci_le_set_scan_resp_data</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, hci.o(i.hci_le_set_scan_resp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = hci_le_set_scan_resp_data &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[176]"></a>hci_send_cmd</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, hci.o(i.hci_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_write
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[167]"></a>hci_send_req</STRONG> (Thumb, 464 bytes, Stack size 72 bytes, hci.o(i.hci_send_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Queue_Empty
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char_desc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
</UL>

<P><STRONG><a name="[177]"></a>hci_write</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, hci.o(i.hci_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
</UL>

<P><STRONG><a name="[179]"></a>initializeAllSensors</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sensor_service.o(i.initializeAllSensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = initializeAllSensors &rArr; BSP_TEMPERATURE_Init &rArr; BSP_LPS25HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[172]"></a>list_get_size</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ble_list.o(i.list_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = list_get_size
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[e0]"></a>list_init_head</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_list.o(i.list_init_head))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[e6]"></a>list_insert_head</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_list.o(i.list_insert_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = list_insert_head
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[e1]"></a>list_insert_tail</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_list.o(i.list_insert_tail))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = list_insert_tail
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[e3]"></a>list_is_empty</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_list.o(i.list_is_empty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = list_is_empty
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Queue_Empty
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[e4]"></a>list_remove_head</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_list.o(i.list_remove_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = list_remove_head &rArr; list_remove_node
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_event_list
</UL>

<P><STRONG><a name="[17c]"></a>list_remove_node</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ble_list.o(i.list_remove_node))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = list_remove_node
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
</UL>

<P><STRONG><a name="[17d]"></a>list_remove_tail</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_list.o(i.list_remove_tail))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = list_remove_tail &rArr; list_remove_node
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[7e]"></a>main</STRONG> (Thumb, 238 bytes, Stack size 56 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = main &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Read_Request_CB &rArr; Temp_Update &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeAllSensors
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableAllSensors
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_LED_Service
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Environmental_Sensor_Service
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[163]"></a>setConnectable</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, sensor_service.o(i.setConnectable))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = setConnectable &rArr; aci_gap_set_discoverable &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[ba]"></a>set_irq_as_input</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, stm32_bluenrg_ble.o(i.set_irq_as_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[b8]"></a>set_irq_as_output</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, stm32_bluenrg_ble.o(i.set_irq_as_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_irq_as_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[159]"></a>Temperature_Sensor_Handler</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, sensor_service.o(i.Temperature_Sensor_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Temperature_Sensor_Handler &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_IsInitialized
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Get_Temp
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[b9]"></a>us150Delay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.us150Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = us150Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[d5]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[da]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, stm32l0xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[112]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[c8]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[cd]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[c9]"></a>I2C_TransferConfig</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, stm32l0xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[ca]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[cb]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[ce]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32l0xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[171]"></a>free_event_list</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hci.o(i.free_event_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = free_event_list &rArr; HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[178]"></a>move_list</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hci.o(i.move_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = move_list &rArr; list_remove_tail &rArr; list_remove_node
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[17a]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_list.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_get_size
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
</UL>

<P><STRONG><a name="[17b]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_list.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_get_size
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
</UL>

<P><STRONG><a name="[10c]"></a>I2C_EXPBD_Error</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_EXPBD_Error &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_WriteData
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_ReadData
</UL>

<P><STRONG><a name="[10d]"></a>I2C_EXPBD_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>

<P><STRONG><a name="[10f]"></a>I2C_EXPBD_MspInit</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Init
</UL>

<P><STRONG><a name="[110]"></a>I2C_EXPBD_ReadData</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[111]"></a>I2C_EXPBD_WriteData</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, x_nucleo_iks01a1.o(i.I2C_EXPBD_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EXPBD_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>

<P><STRONG><a name="[a6]"></a>BSP_HTS221_TEMPERATURE_Init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_HTS221_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_HTS221_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[ab]"></a>BSP_LPS22HB_TEMPERATURE_Init</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_LPS22HB_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_LPS22HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Sensor_IO_ITConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[ad]"></a>BSP_LPS25HB_TEMPERATURE_Init</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, x_nucleo_iks01a1_temperature.o(i.BSP_LPS25HB_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_LPS25HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; I2C_EXPBD_Init &rArr; I2C_EXPBD_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[ec]"></a>HTS221_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Check_WhoAmI
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Check_WhoAmI
</UL>

<P><STRONG><a name="[f1]"></a>HTS221_Get_Hum</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, hts221_driver_hl.o(i.HTS221_Get_Hum))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = HTS221_Get_Hum &rArr; HTS221_Get_Humidity &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_Hum
</UL>

<P><STRONG><a name="[f7]"></a>HTS221_Get_ODR</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_Get_ODR &rArr; HTS221_Get_Odr &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_ODR
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_ODR
</UL>

<P><STRONG><a name="[f9]"></a>HTS221_Get_Temp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, hts221_driver_hl.o(i.HTS221_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HTS221_Get_Temp &rArr; HTS221_Get_Temperature &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_Temp
</UL>

<P><STRONG><a name="[ed]"></a>HTS221_Get_WhoAmI</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_WhoAmI
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_WhoAmI
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Check_WhoAmI
</UL>

<P><STRONG><a name="[5]"></a>HTS221_H_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_H_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HTS221_H_Check_WhoAmI &rArr; HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>HTS221_H_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_H_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HTS221_H_DeInit &rArr; HTS221_H_Sensor_Disable &rArr; HTS221_Sensor_Disable &rArr; HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>HTS221_H_Get_DRDY_Status</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hts221_driver_hl.o(i.HTS221_H_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_H_Get_DRDY_Status &rArr; HTS221_Get_DataStatus &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>HTS221_H_Get_Hum</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Get_Hum))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HTS221_H_Get_Hum &rArr; HTS221_Get_Hum &rArr; HTS221_Get_Humidity &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Hum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>HTS221_H_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_H_Get_ODR &rArr; HTS221_Get_ODR &rArr; HTS221_Get_Odr &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>HTS221_H_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_H_Get_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>HTS221_H_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_H_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HTS221_H_Init &rArr; HTS221_Init &rArr; HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>HTS221_H_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_H_Read_Reg &rArr; HTS221_Read_Reg &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>HTS221_H_Sensor_Disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_H_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_H_Sensor_Disable &rArr; HTS221_Sensor_Disable &rArr; HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>HTS221_H_Sensor_Enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_H_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_H_Sensor_Enable &rArr; HTS221_Sensor_Enable &rArr; HTS221_Activate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>HTS221_H_Set_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_H_Set_ODR &rArr; HTS221_Set_ODR &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>HTS221_H_Set_ODR_Value</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_H_Set_ODR_Value &rArr; HTS221_Set_ODR_Value &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>HTS221_H_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_H_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HTS221_H_Write_Reg &rArr; HTS221_Write_Reg &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[fc]"></a>HTS221_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HTS221_Init &rArr; HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Check_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Init
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Init
</UL>

<P><STRONG><a name="[fd]"></a>HTS221_Read_Reg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_Read_Reg &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Read_Reg
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Read_Reg
</UL>

<P><STRONG><a name="[fe]"></a>HTS221_Sensor_Disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HTS221_Sensor_Disable &rArr; HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Sensor_Disable
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Sensor_Disable
</UL>

<P><STRONG><a name="[ff]"></a>HTS221_Sensor_Enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HTS221_Sensor_Enable &rArr; HTS221_Activate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Sensor_Enable
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Sensor_Enable
</UL>

<P><STRONG><a name="[100]"></a>HTS221_Set_ODR</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_Set_ODR &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Set_ODR
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Set_ODR
</UL>

<P><STRONG><a name="[101]"></a>HTS221_Set_ODR_Value</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_Set_ODR_Value &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Set_ODR_Value
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Set_ODR_Value
</UL>

<P><STRONG><a name="[12]"></a>HTS221_T_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_T_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HTS221_T_Check_WhoAmI &rArr; HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>HTS221_T_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_T_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HTS221_T_DeInit &rArr; HTS221_T_Sensor_Disable &rArr; HTS221_Sensor_Disable &rArr; HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>HTS221_T_Get_DRDY_Status</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hts221_driver_hl.o(i.HTS221_T_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_T_Get_DRDY_Status &rArr; HTS221_Get_DataStatus &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>HTS221_T_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_T_Get_ODR &rArr; HTS221_Get_ODR &rArr; HTS221_Get_Odr &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>HTS221_T_Get_Temp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HTS221_T_Get_Temp &rArr; HTS221_Get_Temp &rArr; HTS221_Get_Temperature &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>HTS221_T_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_T_Get_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>HTS221_T_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_T_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HTS221_T_Init &rArr; HTS221_Init &rArr; HTS221_Check_WhoAmI &rArr; HTS221_Get_WhoAmI &rArr; HTS221_Get_DeviceID &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>HTS221_T_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_T_Read_Reg &rArr; HTS221_Read_Reg &rArr; HTS221_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>HTS221_T_Sensor_Disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_T_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_T_Sensor_Disable &rArr; HTS221_Sensor_Disable &rArr; HTS221_DeActivate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>HTS221_T_Sensor_Enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hts221_driver_hl.o(i.HTS221_T_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HTS221_T_Sensor_Enable &rArr; HTS221_Sensor_Enable &rArr; HTS221_Activate &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>HTS221_T_Set_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_T_Set_ODR &rArr; HTS221_Set_ODR &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>HTS221_T_Set_ODR_Value</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HTS221_T_Set_ODR_Value &rArr; HTS221_Set_ODR_Value &rArr; HTS221_Set_Odr &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>HTS221_T_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221_driver_hl.o(i.HTS221_T_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HTS221_T_Write_Reg &rArr; HTS221_Write_Reg &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[102]"></a>HTS221_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, hts221_driver_hl.o(i.HTS221_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HTS221_Write_Reg &rArr; HTS221_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Write_Reg
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Write_Reg
</UL>

<P><STRONG><a name="[13a]"></a>LPS25HB_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Check_WhoAmI
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Check_WhoAmI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[140]"></a>LPS25HB_Get_ODR</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_ODR
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_ODR
</UL>

<P><STRONG><a name="[142]"></a>LPS25HB_Get_Press</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS25HB_Get_Press &rArr; LPS25HB_Get_Pressure &rArr; LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Pressure
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_Press
</UL>

<P><STRONG><a name="[146]"></a>LPS25HB_Get_Temp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS25HB_Get_Temp &rArr; LPS25HB_Get_Temperature &rArr; LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_Temp
</UL>

<P><STRONG><a name="[13b]"></a>LPS25HB_Get_WhoAmI</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_WhoAmI
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_WhoAmI
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>

<P><STRONG><a name="[148]"></a>LPS25HB_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Init
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Init
</UL>

<P><STRONG><a name="[1f]"></a>LPS25HB_P_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS25HB_P_Check_WhoAmI &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>LPS25HB_P_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_P_DeInit &rArr; LPS25HB_P_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>LPS25HB_P_Get_DRDY_Status</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_P_Get_DRDY_Status &rArr; LPS25HB_Get_DataStatus &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>LPS25HB_P_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_P_Get_ODR &rArr; LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>LPS25HB_P_Get_Press</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LPS25HB_P_Get_Press &rArr; LPS25HB_Get_Press &rArr; LPS25HB_Get_Pressure &rArr; LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Press
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>LPS25HB_P_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_P_Get_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>LPS25HB_P_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS25HB_P_Init &rArr; LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>LPS25HB_P_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_P_Read_Reg &rArr; LPS25HB_Read_Reg &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>LPS25HB_P_Sensor_Disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_P_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>LPS25HB_P_Sensor_Enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_P_Sensor_Enable &rArr; LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>LPS25HB_P_Set_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_P_Set_ODR &rArr; LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>LPS25HB_P_Set_ODR_Value</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_P_Set_ODR_Value &rArr; LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>LPS25HB_P_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_P_Write_Reg &rArr; LPS25HB_Write_Reg &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[14e]"></a>LPS25HB_Read_Reg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Read_Reg &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Read_Reg
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Read_Reg
</UL>

<P><STRONG><a name="[14f]"></a>LPS25HB_Sensor_Disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Disable
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Disable
</UL>

<P><STRONG><a name="[150]"></a>LPS25HB_Sensor_Enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Enable
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Enable
</UL>

<P><STRONG><a name="[149]"></a>LPS25HB_Set_ODR</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Set_ODR
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Set_ODR
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[151]"></a>LPS25HB_Set_ODR_Value</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Set_ODR_Value
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Set_ODR_Value
</UL>

<P><STRONG><a name="[2c]"></a>LPS25HB_T_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS25HB_T_Check_WhoAmI &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>LPS25HB_T_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_T_DeInit &rArr; LPS25HB_T_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>LPS25HB_T_Get_DRDY_Status</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_T_Get_DRDY_Status &rArr; LPS25HB_Get_DataStatus &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>LPS25HB_T_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_T_Get_ODR &rArr; LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>LPS25HB_T_Get_Temp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LPS25HB_T_Get_Temp &rArr; LPS25HB_Get_Temp &rArr; LPS25HB_Get_Temperature &rArr; LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>LPS25HB_T_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_T_Get_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>LPS25HB_T_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS25HB_T_Init &rArr; LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>LPS25HB_T_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS25HB_T_Read_Reg &rArr; LPS25HB_Read_Reg &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>LPS25HB_T_Sensor_Disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_T_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>LPS25HB_T_Sensor_Enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_T_Sensor_Enable &rArr; LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>LPS25HB_T_Set_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_T_Set_ODR &rArr; LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>LPS25HB_T_Set_ODR_Value</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS25HB_T_Set_ODR_Value &rArr; LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>LPS25HB_T_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS25HB_T_Write_Reg &rArr; LPS25HB_Write_Reg &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[152]"></a>LPS25HB_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lps25hb_driver_hl.o(i.LPS25HB_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_Write_Reg &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Write_Reg
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Write_Reg
</UL>

<P><STRONG><a name="[113]"></a>LPS22HB_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Check_WhoAmI
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Check_WhoAmI
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[55]"></a>LPS22HB_FIFO_Get_Data</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LPS22HB_FIFO_Get_Data &rArr; LPS22HB_Get_Temp &rArr; LPS22HB_Get_Temperature &rArr; LPS22HB_Get_RawTemperature &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temp
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Press
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>LPS22HB_FIFO_Get_Empty_Status</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Empty_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_FIFO_Get_Empty_Status &rArr; LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>LPS22HB_FIFO_Get_Fth_Status</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Fth_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_FIFO_Get_Fth_Status &rArr; LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>LPS22HB_FIFO_Get_Full_Status</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Full_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_FIFO_Get_Full_Status &rArr; LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>LPS22HB_FIFO_Get_Mode</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Get_Mode &rArr; LPS22HB_Get_FifoMode &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>LPS22HB_FIFO_Get_Num_Of_Samples</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Num_Of_Samples))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_FIFO_Get_Num_Of_Samples &rArr; LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>LPS22HB_FIFO_Get_Ovr_Status</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Ovr_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_FIFO_Get_Ovr_Status &rArr; LPS22HB_Get_FifoStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>LPS22HB_FIFO_Get_Watermark_Level</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Get_Watermark_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Get_Watermark_Level &rArr; LPS22HB_Get_FifoWatermarkLevel &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_FifoWatermarkLevel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>LPS22HB_FIFO_Reset_Interrupt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Reset_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Reset_Interrupt &rArr; LPS22HB_Set_FIFO_OVR_Interrupt &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_OVR_Interrupt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FULL_Interrupt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FTH_Interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>LPS22HB_FIFO_Set_Interrupt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Set_Interrupt &rArr; LPS22HB_Set_FIFO_OVR_Interrupt &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_OVR_Interrupt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FULL_Interrupt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FIFO_FTH_Interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>LPS22HB_FIFO_Set_Mode</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Set_Mode &rArr; LPS22HB_Set_FifoMode &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>LPS22HB_FIFO_Set_Watermark_Level</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Set_Watermark_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Set_Watermark_Level &rArr; LPS22HB_Set_FifoWatermarkLevel &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>LPS22HB_FIFO_Stop_On_Fth</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Stop_On_Fth))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Stop_On_Fth &rArr; LPS22HB_Set_FifoWatermarkLevelUse &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevelUse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>LPS22HB_FIFO_Usage</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Usage))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Usage &rArr; LPS22HB_Set_FifoModeUse &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoModeUse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>LPS22HB_FIFO_Watermark_Usage</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_FIFO_Watermark_Usage))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_FIFO_Watermark_Usage &rArr; LPS22HB_Set_FifoWatermarkLevelUse &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_FifoWatermarkLevelUse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[124]"></a>LPS22HB_Get_ODR</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_ODR
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Enabled
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_ODR
</UL>

<P><STRONG><a name="[115]"></a>LPS22HB_Get_Press</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LPS22HB_Get_Press &rArr; LPS22HB_Get_Pressure &rArr; LPS22HB_Get_RawPressure &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Pressure
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_Press
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Data
</UL>

<P><STRONG><a name="[116]"></a>LPS22HB_Get_Temp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LPS22HB_Get_Temp &rArr; LPS22HB_Get_Temperature &rArr; LPS22HB_Get_RawTemperature &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_Temp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_FIFO_Get_Data
</UL>

<P><STRONG><a name="[114]"></a>LPS22HB_Get_WhoAmI</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_WhoAmI
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_WhoAmI
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Check_WhoAmI
</UL>

<P><STRONG><a name="[12a]"></a>LPS22HB_Initialize</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LPS22HB_Initialize &rArr; LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Check_WhoAmI
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Init
</UL>

<P><STRONG><a name="[39]"></a>LPS22HB_P_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LPS22HB_P_Check_WhoAmI &rArr; LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>LPS22HB_P_DeInit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_P_DeInit &rArr; LPS22HB_P_Sensor_Disable &rArr; LPS22HB_Set_Odr &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>LPS22HB_P_Get_DRDY_Status</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_P_Get_DRDY_Status &rArr; LPS22HB_Get_DataStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>LPS22HB_P_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_P_Get_ODR &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>LPS22HB_P_Get_Press</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LPS22HB_P_Get_Press &rArr; LPS22HB_Get_Press &rArr; LPS22HB_Get_Pressure &rArr; LPS22HB_Get_RawPressure &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Press
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>LPS22HB_P_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_P_Get_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>LPS22HB_P_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LPS22HB_P_Init &rArr; LPS22HB_Initialize &rArr; LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>LPS22HB_P_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_P_Read_Reg &rArr; LPS22HB_Read_Reg &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>LPS22HB_P_Sensor_Disable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_P_Sensor_Disable &rArr; LPS22HB_Set_Odr &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>LPS22HB_P_Sensor_Enable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_P_Sensor_Enable &rArr; LPS22HB_Set_ODR_Value_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>LPS22HB_P_Set_ODR</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_P_Set_ODR &rArr; LPS22HB_Set_ODR_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Enabled
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>LPS22HB_P_Set_ODR_Value</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_P_Set_ODR_Value &rArr; LPS22HB_Set_ODR_Value_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>LPS22HB_P_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_P_Write_Reg &rArr; LPS22HB_Write_Reg &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[131]"></a>LPS22HB_Read_Reg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LPS22HB_Read_Reg &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Read_Reg
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Read_Reg
</UL>

<P><STRONG><a name="[135]"></a>LPS22HB_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_Set_ODR_Value_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPS22HB_Set_ODR_Value_When_Disabled
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR_Value
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR_Value
</UL>

<P><STRONG><a name="[132]"></a>LPS22HB_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LPS22HB_Set_ODR_Value_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR_Value
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Sensor_Enable
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR_Value
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Sensor_Enable
</UL>

<P><STRONG><a name="[134]"></a>LPS22HB_Set_ODR_When_Disabled</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lps22hb_driver_hl.o(i.LPS22HB_Set_ODR_When_Disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPS22HB_Set_ODR_When_Disabled &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR
</UL>

<P><STRONG><a name="[133]"></a>LPS22HB_Set_ODR_When_Enabled</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_Set_ODR_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LPS22HB_Set_ODR_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR
</UL>

<P><STRONG><a name="[46]"></a>LPS22HB_T_Check_WhoAmI</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LPS22HB_T_Check_WhoAmI &rArr; LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>LPS22HB_T_DeInit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_T_DeInit &rArr; LPS22HB_T_Sensor_Disable &rArr; LPS22HB_Set_Odr &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>LPS22HB_T_Get_DRDY_Status</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_DRDY_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_T_Get_DRDY_Status &rArr; LPS22HB_Get_DataStatus &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>LPS22HB_T_Get_ODR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_T_Get_ODR &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>LPS22HB_T_Get_Temp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LPS22HB_T_Get_Temp &rArr; LPS22HB_Get_Temp &rArr; LPS22HB_Get_Temperature &rArr; LPS22HB_Get_RawTemperature &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>LPS22HB_T_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LPS22HB_T_Get_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>LPS22HB_T_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LPS22HB_T_Init &rArr; LPS22HB_Initialize &rArr; LPS22HB_Check_WhoAmI &rArr; LPS22HB_Get_WhoAmI &rArr; LPS22HB_Get_DeviceID &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>LPS22HB_T_Read_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_T_Read_Reg &rArr; LPS22HB_Read_Reg &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Read_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>LPS22HB_T_Sensor_Disable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LPS22HB_T_Sensor_Disable &rArr; LPS22HB_Set_Odr &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>LPS22HB_T_Sensor_Enable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_T_Sensor_Enable &rArr; LPS22HB_Set_ODR_Value_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>LPS22HB_T_Set_ODR</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_T_Set_ODR &rArr; LPS22HB_Set_ODR_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Enabled
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>LPS22HB_T_Set_ODR_Value</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LPS22HB_T_Set_ODR_Value &rArr; LPS22HB_Set_ODR_Value_When_Enabled &rArr; LPS22HB_Get_ODR &rArr; LPS22HB_Get_Odr &rArr; LPS22HB_ReadReg &rArr; Sensor_IO_Read &rArr; I2C_EXPBD_ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>LPS22HB_T_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LPS22HB_T_Write_Reg &rArr; LPS22HB_Write_Reg &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Write_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[136]"></a>LPS22HB_Write_Reg</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lps22hb_driver_hl.o(i.LPS22HB_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LPS22HB_Write_Reg &rArr; LPS22HB_WriteReg &rArr; Sensor_IO_Write &rArr; I2C_EXPBD_WriteData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Write_Reg
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Write_Reg
</UL>

<P><STRONG><a name="[165]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
